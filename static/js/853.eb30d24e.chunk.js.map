{"version":3,"file":"static/js/853.eb30d24e.chunk.js","mappings":"yOAKaA,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC7B,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAACC,GACnB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,QACHR,EAASQ,GACT,MAEF,IAAK,WACHN,EAAYM,GACZ,MAEF,QACE,OAEL,EAoBKC,EAAQ,WACZX,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,gBAAKQ,UAAU,qBAAf,UACE,kBAAMA,UAAU,gBAAgBf,SA1BjB,SAACW,GAClBA,EAAMK,iBAENR,GACES,EAAAA,EAAAA,IAAS,CACPf,KAAMA,EACNE,MAAOA,EACPE,SAAUA,KAIVN,GACFA,IAGFc,GACD,EAUG,WACE,4BACE,kBAAOC,UAAU,iBAAjB,SAAkC,UAClC,kBACEA,UAAU,iBACVG,KAAK,OACLhB,KAAK,OACLW,MAAOX,EACPiB,SAAUT,EACVU,YAAY,kBACZC,UAAQ,QAGZ,4BACE,kBAAON,UAAU,iBAAjB,SAAkC,WAClC,kBACEA,UAAU,iBACVG,KAAK,QACLhB,KAAK,QACLW,MAAOT,EACPe,SAAUT,EACVU,YAAY,mBACZC,UAAQ,QAGZ,4BACE,kBAAON,UAAU,iBAAjB,SAAkC,cAClC,kBACEA,UAAU,iBACVG,KAAK,WACLhB,KAAK,WACLW,MAAOP,EACPa,SAAUT,EACVU,YAAY,sBACZC,UAAQ,QAGZ,mBAAQN,UAAU,yBAAyBG,KAAK,SAAhD,SAAyD,eAMhE,EC/FD,EAJiB,WACf,OAAO,SAACnB,EAAD,GACR,C","sources":["components/Forms/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/operations';\n\nexport const RegisterForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const inputChange = (event) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const dataSubmit = (event) => {\n    event.preventDefault();\n\n    dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n\n    if (onSubmit) {\n      onSubmit();\n    }\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div className='loginPageContainer'>\n      <form className=\"register-form\" onSubmit={dataSubmit}>\n        <div>\n          <label className=\"register-label\">Name</label>\n          <input\n            className=\"register-input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={inputChange}\n            placeholder=\"Write your name\"\n            required\n          />\n        </div>\n        <div>\n          <label className=\"register-label\">Email</label>\n          <input\n            className=\"register-input\"\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={inputChange}\n            placeholder=\"Write your email\"\n            required\n          />\n        </div>\n        <div>\n          <label className=\"register-label\">Password</label>\n          <input\n            className=\"register-input\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={inputChange}\n            placeholder=\"Write your password\"\n            required\n          />\n        </div>\n        <button className=\"register-submit-button\" type=\"submit\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default RegisterForm;\n","import { RegisterForm } from 'components/Forms/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\n\nexport default Register;\n"],"names":["RegisterForm","onSubmit","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","inputChange","event","target","value","reset","className","preventDefault","register","type","onChange","placeholder","required"],"sourceRoot":""}